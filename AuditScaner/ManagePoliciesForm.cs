using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace AuditScaner

{
    
    public partial class ManagePoliciesForm : Form 
    {
        private string selectedFileName;
        private Form currentChildForm;
        public ManagePoliciesForm()
        {
            InitializeComponent();
            //Form
            this.Text = "Policy Manager";
            this.ControlBox = false;
            this.DoubleBuffered = true;
            this.MaximizedBounds = Screen.FromHandle(this.Handle).WorkingArea;
            //Create Directory for policies
            initializeDataSet();

        }

        private void initializeDataSet()
        {
            string root = @"C:\";
            string subdir = @"C:\VulnerabilityScanner";
            if (!System.IO.Directory.Exists(root))
            {
                Directory.CreateDirectory(root);
            }


            if (!Directory.Exists(subdir))
            {
                Directory.CreateDirectory(subdir);
            }
        }

        private void Dashboard_Click(object sender, EventArgs e)
        {
            selectFile();
        }

        private void selectFile()
        {
            OpenFileDialog openFileDialog1 = new OpenFileDialog();
            openFileDialog1.InitialDirectory = "c:\\";
            openFileDialog1.Filter = "Audit files (*.audit)|*.audit*";
            openFileDialog1.FilterIndex = 0;
            openFileDialog1.RestoreDirectory = true;

            if (openFileDialog1.ShowDialog() == DialogResult.OK)
            {
                selectedFileName = openFileDialog1.FileName;
            }
            try
            {
                File.Copy(selectedFileName, "C:\\VulnerabilityScanner" + "\\" + Path.GetFileName(selectedFileName));
            }
            catch (System.IO.IOException)
            {
                MessageBox.Show("File Already Exists");
            }

            catch (System.ArgumentNullException)
            {
                
            }

        }

        private void editExisting_Click(object sender, EventArgs e)
        {
            OpenChildForm(new EditPolicy());
        }

        private void OpenChildForm(Form childForm)
        {
            if (currentChildForm != null)
            {
                currentChildForm.Close();
            }
            currentChildForm = childForm;
            childForm.TopLevel = false;
            childForm.FormBorderStyle = FormBorderStyle.None;
            childForm.Dock = DockStyle.Fill;
            this.Controls.Add(childForm);
            childForm.Tag = childForm;
            childForm.BringToFront();
            childForm.Show();

        }

        private void ManagePoliciesForm_Load(object sender, EventArgs e)
        {

        }
    }
}
