using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace AuditScaner
{
    public partial class EditPolicy : Form
    {
        public string fileLocation = "C:\\VulnerabilityScanner";
        public static string selected;
        private Form currentChildForm;

        public EditPolicy()
        {
            InitializeComponent();
            //Form settings
            this.Text = string.Empty;
            this.ControlBox = false;
            this.DoubleBuffered = true;
            this.MaximizedBounds = Screen.FromHandle(this.Handle).WorkingArea;
            //File List
            FileList.DropDownStyle = ComboBoxStyle.DropDownList;
            populateDropDown();
            //Prevent errors and disable buttons
            disableButtons();
        }


        private void DeletePolicy_Click(object sender, EventArgs e)
        {
            selected = FileList.Text;
            File.Delete(selected);
            reloadFileList();
        }

        private void RemoveChecks_Click(object sender, EventArgs e)
        {
            OpenChildForm(new RemoveOptions());
        }

        private void OpenChildForm(Form childForm)
        {
            
            currentChildForm = childForm;
            childForm.TopLevel = false;
            childForm.FormBorderStyle = FormBorderStyle.None;
            childForm.Dock = DockStyle.Fill;
            this.Controls.Add(childForm);
            childForm.Tag = childForm;
            childForm.BringToFront();
            childForm.Show();

        }

        private void populateDropDown()
        {
            FileList.Items.AddRange(System.IO.Directory.GetFiles(fileLocation));
        }

        private void reloadFileList()
        {
            FileList.Items.Clear();
            populateDropDown();
            disableButtons();
        }

        private void disableButtons()
        {
            DeletePolicy.Enabled = false;
            RemoveChecks.Enabled = false;
        }

        private void enableButtons()
        {
            DeletePolicy.Enabled = true;
            RemoveChecks.Enabled = true;
        }

        private void FileList_SelectedIndexChanged(object sender, EventArgs e)
        {
            enableButtons();
            selected = FileList.Text;
        }

        private void EditPolicy_Load(object sender, EventArgs e)
        {

        }

        private void backToManage_Click(object sender, EventArgs e)
        {
            this.Close();
        }
    }
}
